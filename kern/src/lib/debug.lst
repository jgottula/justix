     1                                  %include 'common/header.inc'
     2                              <1> # 1 "src/common/header.h"
     3                              <1> # 1 "<command-line>"
     4                              <1> # 1 "src/common/header.h"
     5                              <1> 
     6                              <1> 
     7                              <1>  cpu 586
     8                              <1>  bits 32
     9                              <1> 
    10                              <1> %include 'common/macros.inc'
    11                              <2> # 1 "src/common/macros.h"
    12                              <2> # 1 "<command-line>"
    13                              <2> # 1 "src/common/macros.h"
    14                              <2> 
    15                              <2> 
    16                              <2> 
    17                              <2> 
    18                              <2> 
    19                              <2> 
    20                              <2> 
    21                              <2> %macro frame 0-1
    22                              <2>  push ebp
    23                              <2>  mov ebp,esp
    24                              <2> %if %0 == 1
    25                              <2>  sub esp,%1
    26                              <2> %endif
    27                              <2> %endm
    28                              <2> 
    29                              <2> %macro unframe 0
    30                              <2>  mov esp,ebp
    31                              <2>  pop ebp
    32                              <2> %endm
    33                                  	
    34                                  	section .text
    35                                  	
    36                                  	; ax new cursor
    37                                  video_set_cur:
    38 00000000 C605D40300000E          	mov byte [0x3d4],0x0e
    39 00000007 8825D5030000            	mov byte [0x3d5],ah
    40                                  	
    41 0000000D C605D40300000F          	mov byte [0x3d4],0x0f
    42 00000014 A2D5030000              	mov byte [0x3d5],al
    43                                  	
    44 00000019 C3                      	ret
    45                                  	
    46                                  	; ax new cursor
    47                                  video_set_page:
    48 0000001A C605D40300000E          	mov byte [0x3d4],0x0e
    49 00000021 8825D5030000            	mov byte [0x3d5],ah
    50                                  	
    51 00000027 C605D40300000F          	mov byte [0x3d4],0x0f
    52 0000002E A2D5030000              	mov byte [0x3d5],al
    53                                  	
    54 00000033 C3                      	ret
    55                                  	
    56                                  	
    57                                  	global debug_clear_screen:function
    58                                  	; void debug_clear_screen(void)
    59                                  debug_clear_screen:
    60                                  	frame
    61 00000034 55                  <1>  push ebp
    62 00000035 89E5                <1>  mov ebp,esp
    63                              <1> %if %0 == 1
    64                              <1>  sub esp,%1
    65                              <1> %endif
    66                                  	
    67 00000037 57                      	push edi
    68                                  	
    69 00000038 B800000000              	mov eax,0x00000000
    70 0000003D BF00900B00              	mov edi,0x000b9000
    71 00000042 B900100000              	mov ecx,0x00001000
    72                                  	
    73 00000047 F3AB                    	rep stosd
    74                                  	
    75 00000049 5F                      	pop edi
    76                                  	
    77 0000004A C605D40300000E          	mov byte [0x3d4],0x0e
    78 00000051 C605D503000000          	mov byte [0x3d5],0x00
    79                                  	
    80 00000058 C605D40300000F          	mov byte [0x3d4],0x0f
    81 0000005F C605D503000000          	mov byte [0x3d5],0x00
    82                                  	
    83                                  	unframe
    84 00000066 89EC                <1>  mov esp,ebp
    85 00000068 5D                  <1>  pop ebp
    86 00000069 C3                      	ret
    87                                  	
    88                                  	
    89                                  	global debug_print_char:function
    90                                  	; void debug_print_char(char chr)
    91                                  debug_print_char:
    92                                  	frame
    93 0000006A 55                  <1>  push ebp
    94 0000006B 89E5                <1>  mov ebp,esp
    95                              <1> %if %0 == 1
    96                              <1>  sub esp,%1
    97                              <1> %endif
    98                                  	
    99                                  	
   100                                  	
   101                                  	unframe
   102 0000006D 89EC                <1>  mov esp,ebp
   103 0000006F 5D                  <1>  pop ebp
   104 00000070 C3                      	ret
   105                                  	
   106                                  	
   107                                  	global debug_print_string:function
   108                                  	; void debug_print_string(const char *str)
   109                                  debug_print_string:
   110                                  	frame
   111 00000071 55                  <1>  push ebp
   112 00000072 89E5                <1>  mov ebp,esp
   113                              <1> %if %0 == 1
   114                              <1>  sub esp,%1
   115                              <1> %endif
   116                                  	
   117                                  	
   118                                  	
   119                                  	unframe
   120 00000074 89EC                <1>  mov esp,ebp
   121 00000076 5D                  <1>  pop ebp
   122 00000077 C3                      	ret
   123                                  	
   124                                  	
   125                                  	global debug_print_hex8:function
   126                                  	; void debug_print_hex8(uint8_t hex)
   127                                  debug_print_hex8:
   128                                  	frame
   129 00000078 55                  <1>  push ebp
   130 00000079 89E5                <1>  mov ebp,esp
   131                              <1> %if %0 == 1
   132                              <1>  sub esp,%1
   133                              <1> %endif
   134                                  	
   135                                  	
   136                                  	
   137                                  	unframe
   138 0000007B 89EC                <1>  mov esp,ebp
   139 0000007D 5D                  <1>  pop ebp
   140 0000007E C3                      	ret
   141                                  	
   142                                  	
   143                                  	global debug_print_hex16:function
   144                                  	; void debug_print_hex16(uint16_t hex)
   145                                  debug_print_hex16:
   146                                  	frame
   147 0000007F 55                  <1>  push ebp
   148 00000080 89E5                <1>  mov ebp,esp
   149                              <1> %if %0 == 1
   150                              <1>  sub esp,%1
   151                              <1> %endif
   152                                  	
   153                                  	
   154                                  	
   155                                  	unframe
   156 00000082 89EC                <1>  mov esp,ebp
   157 00000084 5D                  <1>  pop ebp
   158 00000085 C3                      	ret
   159                                  	
   160                                  	
   161                                  	global debug_print_hex32:function
   162                                  	; void debug_print_hex32(uint32_t hex)
   163                                  debug_print_hex32:
   164                                  	frame
   165 00000086 55                  <1>  push ebp
   166 00000087 89E5                <1>  mov ebp,esp
   167                              <1> %if %0 == 1
   168                              <1>  sub esp,%1
   169                              <1> %endif
   170                                  	
   171                                  	
   172                                  	
   173                                  	unframe
   174 00000089 89EC                <1>  mov esp,ebp
   175 0000008B 5D                  <1>  pop ebp
   176 0000008C C3                      	ret
   177                                  	
   178                                  	
   179                                  	global debug_stack_trace:function
   180                                  	; void debug_stack_trace(void *ebp, void *stack_bottom)
   181                                  debug_stack_trace:
   182                                  	frame
   183 0000008D 55                  <1>  push ebp
   184 0000008E 89E5                <1>  mov ebp,esp
   185                              <1> %if %0 == 1
   186                              <1>  sub esp,%1
   187                              <1> %endif
   188                                  	
   189 00000090 8B4504                  	mov eax,[ebp+4] ; ebp
   190 00000093 8B4D08                  	mov ecx,[ebp+8] ; stack_bottom
   191                                  	
   192                                  .trace_loop:
   193 00000096 39C8                    	cmp eax,ecx
   194 00000098 7300                    	jae .done
   195                                  	
   196                                  	
   197                                  	
   198                                  .done:
   199                                  	
   200                                  	;push ebp
   201                                  	;mov ebp,esp
   202                                  	
   203                                  	unframe
   204 0000009A 89EC                <1>  mov esp,ebp
   205 0000009C 5D                  <1>  pop ebp
   206 0000009D C3                      	ret
